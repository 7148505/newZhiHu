{
  "compilerOptions": {
    // 编译目标平台
    "target": "ESNext",
    // 输出目录
    // "outDir": "./dist/",
    // 如果使用 webpack 2+ 或 rollup，可以利用 tree-shake:
    // 指定生成哪个模块系统代码
    // "module": "esnext",
    "module": "commonjs",
    // 模块的解析
    "moduleResolution": "node",
    // 在表达式和声明上有隐含的any类型时报错
    // "noImplicitAny": false,
    // 把 ts 文件编译成 js 文件的时候，同时生成对应的 map 文件
    "sourceMap": true,
    // 这可以对 `this` 上的数据 property 进行更严格的推断
    "strict": true,
    // 允许编译javascript文件
    // "allowJs": true,
    "jsx": "preserve",
    // 指定基础目录
    "baseUrl": ".",
    // 启用装饰器
    "experimentalDecorators": true,
    // 移除注释
    // "removeComments": true,
    "importHelpers": true,
    "esModuleInterop": true,  // <-- ADD THIS LINE
    "allowSyntheticDefaultImports": true,
    "watch": true,
    "declaration": true,
    // "types": ["webpack-env", "mocha", "chai","@types/node"],
    "pretty": true,
    // 是相对于"baseUrl"进行解析
    "paths": {
      "vue": ["node_modules/vue/types"],
      "@/*": ["src/*"]
      //   "*": [
      //     "node_modules/*",
      //     "src/types/*"
      // ]
    },
      // 添加需要的解析的语法，否则TS会检测出错。
    "lib": ["ESNext", "dom", "dom.iterable", "scripthost"],
    "typeRoots": [
      "node_modules/@types"
    ]
  },
  "include": [
    "src/**/*",
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "tests/**/*.ts",
    "tests/**/*.tsx"
  ],
  "exclude": ["node_modules"]
}